// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Criar uma migrations yarn prisma migrate dev

model User {
  id String @id @default(uuid())
  name String
  email String @unique  
  password String 
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 

  @@map("use") 
}

model Catogory{
  id String @id @default(uuid())
  name String
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 
  @@map("catogorys")   
  products Product[]
}

model Product{
  id String @id @default(uuid())
  name String
  description String
  price Float
  banner String
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 

  category Catogory @relation(fields: [categoryId], references: [id]) 
  
  @@map("products")   
  categoryId String
  items Item[]  
}

model Order{
  id String @id @default(uuid())
  table Int
  status Boolean @default(false) 
  draft Boolean @default(true)
  name String?
 createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 

  @@map("orders")
  items Item[] 

}

model Item{
  id String @id @default(uuid())
  amount Int 
  
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 

 order Order @relation(fields: [orderId], references: [id]) 
 product Product @relation(fields: [productId], references: [id]) 
  @@map("items")   
  orderId String  
  productId String 
}